{"version":3,"sources":["webpack:////home/raaz/Backstage-app/my-app/plugins/github-playground/src/components/ExampleFetchComponent/ExampleFetchComponent.tsx","webpack:////home/raaz/Backstage-app/my-app/plugins/github-playground/src/components/ExampleComponent/ExampleComponent.tsx"],"names":["DenseTable","viewer","createElement","title","options","search","paging","columns","field","data","repositories","nodes","ExampleFetchComponent","auth","value","loading","error","useAsync","async","token","getAccessToken","gqlEndpoint","defaults","headers","authorization","Alert","severity","message","ExampleComponent","identityApi","userId","getUserId","profile","getProfile","themeId","subtitle","label","Grid","container","spacing","direction","item","Typography","variant","displayName","email"],"mappings":"0NAYA,MA0CaA,EAAa,EAAGC,YAUzB,IAAMC,cAAc,KAAO,CACzBC,MAAO,8BACPC,QAAS,CAAEC,QAAQ,EAAOC,QAAQ,GAClCC,QAZY,CACd,CAAEJ,MAAO,OAAQK,MAAO,QACxB,CAAEL,MAAO,UAAWK,MAAO,aAC3B,CAAEL,MAAO,cAAeK,MAAO,eAC/B,CAAEL,MAAO,aAAcK,MAAO,aAC9B,CAAEL,MAAO,OAAQK,MAAO,WAQtBC,KAAMR,EAAOS,aAAaC,QAInBC,EAAwB,KACnC,MAAMC,EAAO,aAAO,OAEd,MAAEC,EAAK,QAAEC,EAAO,MAAEC,GAAU,OAAAC,EAAA,GAASC,UACzC,MAAMC,QAAcN,EAAKO,iBAEnBC,EAAc,IAAQC,SAAS,CAGnCC,QAAS,CACPC,cAAe,SAASL,MAGtB,OAAElB,SAAiBoB,EAzEf,sQA0EV,OAAOpB,GACN,IAEH,OAAIc,EAAgB,IAAMb,cAAc,IAAU,MAC9Cc,EAAc,IAAMd,cAAcuB,EAAA,EAAO,CAAEC,SAAU,SAAWV,EAAMW,SACtEb,GAASA,EAAMJ,aAAqB,IAAMR,cAAcF,EAAY,CAAEC,OAAQa,IAGhF,IAAMZ,cAAc,KAAO,CACzBC,MAAO,8BACPC,QAAS,CAAEC,QAAQ,EAAOC,QAAQ,GAClCC,QAAS,GACTE,KAAM,MCpFCmB,EAAmB,KAE9B,MAAMC,EAAc,aAAO,MAGrBC,EAASD,EAAYE,YACrBC,EAAUH,EAAYI,aAE5B,OACE,IAAM/B,cAAc,IAAM,CAAEgC,QAAS,QACjC,IAAMhC,cAAc,IAAQ,CAAEC,MAAO,gCAAmCgC,SAAU,qBAChF,IAAMjC,cAAc,IAAa,CAAEkC,MAAO,QAAStB,MAAO,WAC1D,IAAMZ,cAAc,IAAa,CAAEkC,MAAO,YAAatB,MAAO,WAEhE,IAAMZ,cAAc,IAAS,KAC3B,IAAMA,cAAc,IAAe,CAAEC,MAAO,gBAC1C,IAAMD,cAAc,IAAe,KAAM,4CAE3C,IAAMA,cAAcmC,EAAA,EAAM,CAAEC,WAAW,EAAMC,QAAS,EAAGC,UAAW,UAClE,IAAMtC,cAAcmC,EAAA,EAAM,CAAEI,MAAM,GAChC,IAAMvC,cAAc,IAAU,CAAEC,MAAO2B,GACrC,IAAM5B,cAAcwC,EAAA,EAAY,CAAEC,QAAS,SACzC,GAAGX,EAAQY,iBAAiBZ,EAAQa,WAI1C,IAAM3C,cAAcmC,EAAA,EAAM,CAAEI,MAAM,GAChC,IAAMvC,cAAcU,EAAuB","file":"static/52.92a3885b.chunk.js","sourcesContent":["import React from 'react';\nimport { useAsync } from 'react-use';\nimport Alert from '@material-ui/lab/Alert';\nimport {\n  Table,\n\n  Progress,\n  githubAuthApiRef,\n  useApi,\n} from '@backstage/core';\nimport { graphql } from '@octokit/graphql';\n\nconst query = `{\n  viewer {\n    repositories(first: 100) {\n      totalCount\n      nodes {\n        name\n        createdAt\n        description\n        diskUsage\n        isFork\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}`;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const DenseTable = ({ viewer }) => {\n  const columns = [\n    { title: 'Name', field: 'name' },\n    { title: 'Created', field: 'createdAt' },\n    { title: 'Description', field: 'description' },\n    { title: 'Disk Usage', field: 'diskUsage' },\n    { title: 'Fork', field: 'isFork' },\n  ];\n\n  return (\n    React.createElement(Table, {\n      title: \"List Of User's Repositories\"   ,\n      options: { search: false, paging: false },\n      columns: columns,\n      data: viewer.repositories.nodes,}\n    )\n  );\n};\nexport const ExampleFetchComponent = () => {\n  const auth = useApi(githubAuthApiRef);\n\n  const { value, loading, error } = useAsync(async () => {\n    const token = await auth.getAccessToken();\n\n    const gqlEndpoint = graphql.defaults({\n      // Uncomment baseUrl if using enterprise\n      // baseUrl: 'https://github.MY-BIZ.com/api',\n      headers: {\n        authorization: `token ${token}`,\n      },\n    });\n    const { viewer } = await gqlEndpoint(query);\n    return viewer;\n  }, []);\n\n  if (loading) return React.createElement(Progress, null );\n  if (error) return React.createElement(Alert, { severity: \"error\",}, error.message);\n  if (value && value.repositories) return React.createElement(DenseTable, { viewer: value,} );\n\n  return (\n    React.createElement(Table, {\n      title: \"List Of User's Repositories\"   ,\n      options: { search: false, paging: false },\n      columns: [],\n      data: [],}\n    )\n  );\n};\n\n// export default ExampleFetchComponent;\n","import React from 'react';\nimport { Typography, Grid } from '@material-ui/core';\nimport { identityApiRef, useApi } from '@backstage/core';\nimport {\n  InfoCard,\n  Header,\n  Page,\n  Content,\n  ContentHeader,\n  HeaderLabel,\n  SupportButton,\n} from '@backstage/core';\nimport { ExampleFetchComponent } from '../ExampleFetchComponent';\n\nexport const ExampleComponent = () => {\n  // our API hook\n  const identityApi = useApi(identityApiRef);\n\n  // data to use\n  const userId = identityApi.getUserId();\n  const profile = identityApi.getProfile();\n\n  return (\n    React.createElement(Page, { themeId: \"tool\",}\n      , React.createElement(Header, { title: \"Welcome to github-playground!\"  , subtitle: \"Optional subtitle\" ,}\n        , React.createElement(HeaderLabel, { label: \"Owner\", value: \"Team X\" ,} )\n        , React.createElement(HeaderLabel, { label: \"Lifecycle\", value: \"Alpha\",} )\n      )\n      , React.createElement(Content, null\n        , React.createElement(ContentHeader, { title: \"Plugin title\" ,}\n          , React.createElement(SupportButton, null, \"A description of your plugin goes here.\"      )\n        )\n        , React.createElement(Grid, { container: true, spacing: 3, direction: \"column\",}\n          , React.createElement(Grid, { item: true,}\n            , React.createElement(InfoCard, { title: userId,}\n              , React.createElement(Typography, { variant: \"body1\",}\n                , `${profile.displayName} | ${profile.email}`\n              )\n            )\n          )\n          , React.createElement(Grid, { item: true,}\n            , React.createElement(ExampleFetchComponent, null )\n          )\n        )\n      )\n    )\n  )\n};\n"],"sourceRoot":""}